//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2013/07/04 - 10:51:24
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Infrastructure.Data;
using Domain.Entities;

namespace Application.MainModule.Administration.RolesManagement
{

    /// <summary>
    /// Assembler for <see cref="Roles"/> and <see cref="DTORoles"/>.
    /// </summary>
    public static partial class AdapterRoles
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DTORoles"/> converted from <see cref="Roles"/>.</param>
        static partial void OnDTO(this Roles entity, DTORoles dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Roles"/> converted from <see cref="DTORoles"/>.</param>
        static partial void OnEntity(this DTORoles dto, Roles entity);

        /// <summary>
        /// Converts this instance of <see cref="DTORoles"/> to an instance of <see cref="Roles"/>.
        /// </summary>
        /// <param name="dto"><see cref="DTORoles"/> to convert.</param>
        public static Roles ToEntity(this DTORoles dto)
        {
            if (dto == null) return null;

            var entity = new Roles();

            entity.RoleId = dto.RoleId;
            entity.RoleName = dto.RoleName;            

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Roles"/> to an instance of <see cref="DTORoles"/>.
        /// </summary>
        /// <param name="entity"><see cref="Roles"/> to convert.</param>
        public static DTORoles ToDTORoles(this Roles entity)
        {
            if (entity == null) return null;

            var dto = new DTORoles();

            dto.RoleId = entity.RoleId;
            dto.RoleName = entity.RoleName;
            dto.MenusInRole = AdapterMenu.ToDTOs(entity.Menu);

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="DTORoles"/> to an instance of <see cref="Roles"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Roles> ToEntities(this IEnumerable<DTORoles> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Roles"/> to an instance of <see cref="DTORoles"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DTORoles> ToDTOs(this IEnumerable<Roles> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTORoles()).ToList();
        }

    }
}
