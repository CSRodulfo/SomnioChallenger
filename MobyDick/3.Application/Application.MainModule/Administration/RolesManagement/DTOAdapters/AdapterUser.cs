//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2013/09/03 - 11:58:10
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Infrastructure.Data;
using Domain.Entities;
using Application.MainModule.Services;

namespace Application.MainModule.Administration.RolesManagement
{

    /// <summary>
    /// Assembler for <see cref="Users"/> and <see cref="DTOUser"/>.
    /// </summary>
    public static partial class AdapterUser
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DTOUser"/> converted from <see cref="Users"/>.</param>
        static partial void OnDTO(this Users entity, DTOUser dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Users"/> converted from <see cref="DTOUser"/>.</param>
        static partial void OnEntity(this DTOUser dto, Users entity);

        /// <summary>
        /// Converts this instance of <see cref="DTOUser"/> to an instance of <see cref="Users"/>.
        /// </summary>
        /// <param name="dto"><see cref="DTOUser"/> to convert.</param>
        public static Users ToEntity(this DTOUser dto)
        {
            if (dto == null) return null;

            var entity = new Users();

            entity.UserId = dto.UserId;
            entity.UserName = dto.UserName;
            entity.FirstName = dto.FirstName;
            entity.LastName = dto.LastName;
            entity.Email = dto.Email;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Users"/> to an instance of <see cref="DTOUser"/>.
        /// </summary>
        /// <param name="entity"><see cref="Users"/> to convert.</param>
        public static DTOUser ToDTO(this Users entity)
        {
            if (entity == null) return null;

            var dto = new DTOUser();

            dto.UserId = entity.UserId;
            dto.UserName = entity.UserName;
            dto.FirstName = entity.FirstName;
            dto.LastName = entity.LastName;
            dto.Email = entity.Email;

            dto.hasAssignedRoles = entity.HasAssignedRoles();

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="DTOUser"/> to an instance of <see cref="Users"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Users> ToEntities(this IEnumerable<DTOUser> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Users"/> to an instance of <see cref="DTOUser"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DTOUser> ToDTOs(this IEnumerable<Users> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
