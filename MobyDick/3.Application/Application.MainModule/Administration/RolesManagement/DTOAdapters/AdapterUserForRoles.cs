//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2013/09/03 - 16:01:06
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Application.MainModule.Administration.RolesManagement.DTO;
using Infrastructure.Data;
using System.Data.Objects.DataClasses;
using Domain.Entities;

namespace Application.MainModule.Administration.RolesManagement.DTOAdapters
{

    /// <summary>
    /// Assembler for <see cref="Users"/> and <see cref="UsersDTO"/>.
    /// </summary>
    public static partial class AdapterUserForRoles
    {
        /// <summary>
        /// Converts this instance of <see cref="UsersDTO"/> to an instance of <see cref="Users"/>.
        /// </summary>
        /// <param name="dto"><see cref="UsersDTO"/> to convert.</param>
        public static Users ToEntityUserForRoles(this DTOUserForRoles dto)
        {
            if (dto == null) return null;

            var entity = new Users();

            entity.UserId = dto.UserId;
            entity.UserName = dto.UserName;
            entity.Roles = AdapterRoleForUsers.ToEntitiesRoleForUsers(dto.roles);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Users"/> to an instance of <see cref="UsersDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Users"/> to convert.</param>
        public static DTOUserForRoles ToDTOUserForRoles(this Users entity)
        {
            if (entity == null) return null;

            var dto = new DTOUserForRoles();

            dto.UserId = entity.UserId;
            dto.UserName = entity.UserName;
            dto.roles = AdapterRoleForUsers.ToDTOsRoleForUsers(entity.Roles);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="UsersDTO"/> to an instance of <see cref="Users"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Users> ToEntitiesUserForRoles(this IEnumerable<DTOUserForRoles> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntityUserForRoles()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Users"/> to an instance of <see cref="UsersDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DTOUserForRoles> ToDTOs(this IEnumerable<Users> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTOUserForRoles()).ToList();
        }

    }
}
