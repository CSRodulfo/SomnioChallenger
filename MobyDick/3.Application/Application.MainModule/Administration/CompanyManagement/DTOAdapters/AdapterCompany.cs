//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2013/09/03 - 11:58:10
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Infrastructure.Data;
using Domain.Entities;
using Application.MainModule.Services;
using Application.MainModule.Administration.CompanyManagement.DTO;
using Application.MainModule.Administration.FileManagement.DTOAdapters;

namespace Application.MainModule.Administration.CompanyManagement
{

    /// <summary>
    /// Assembler for <see cref="Company"/> and <see cref="DTOCompany"/>.
    /// </summary>
    public static partial class AdapterCompany
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DTOCompany"/> converted from <see cref="Company"/>.</param>
        static partial void OnDTO(this Company entity, DTOCompany dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Company"/> converted from <see cref="DTOUser"/>.</param>
        static partial void OnEntity(this DTOCompany dto, Company entity);

        /// <summary>
        /// Converts this instance of <see cref="DTOCompany"/> to an instance of <see cref="Company"/>.
        /// </summary>
        /// <param name="dto"><see cref="DTOCompany"/> to convert.</param>
        public static Company ToEntity(this DTOCompany dto)
        {
            if (dto == null) return null;

            var entity = new Company();

            entity.IdCompany = dto.IdCompany;
            entity.Name = dto.Name;
            entity.CUIT = dto.CUIT;
            entity.Address = dto.Address;
            entity.Number = dto.Number;
            entity.State = dto.State;
            entity.Country = dto.Country;
            entity.webpages_File = AdapterFile.ToEntity(dto.File);

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Company"/> to an instance of <see cref="DTOCompany"/>.
        /// </summary>
        /// <param name="entity"><see cref="Company"/> to convert.</param>
        public static DTOCompany ToDTO(this Company entity)
        {
            if (entity == null) return null;

            var dto = new DTOCompany();

            dto.IdCompany = entity.IdCompany;
            dto.Name = entity.Name;
            dto.CUIT = entity.CUIT;
            dto.Address = entity.Address;
            dto.Number = entity.Number;
            dto.State = entity.State;
            dto.Country = entity.Country;
            dto.File = AdapterFile.ToDTO(entity.webpages_File);
            if (dto.File != null)
                dto.IdFile = dto.File.IdFile;

            entity.OnDTO(dto);

            return dto;
        }
    }
}
